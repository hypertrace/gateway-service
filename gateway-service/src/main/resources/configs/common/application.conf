main.class = org.hypertrace.gateway.service.GatewayServiceStarter
service.name = gateway-service
service.admin.port = 50072

entity.service.config = {
  host = localhost
  host = ${?ENTITY_SERVICE_HOST_CONFIG}
  port = 50061
  port = ${?ENTITY_SERVICE_PORT_CONFIG}
}
query.service.config = {
  host = localhost
  host = ${?QUERY_SERVICE_HOST_CONFIG}
  port = 8090
  port = ${?QUERY_SERVICE_PORT_CONFIG}
}
attributes.service.config = {
  host = localhost
  host = ${?ATTRIBUTE_SERVICE_HOST_CONFIG}
  port = 9012
  port = ${?ATTRIBUTE_SERVICE_PORT_CONFIG}
}
interaction.config = [
  {
    scope = SERVICE
    callerAttributes = [INTERACTION.fromServiceId]
    calleeAttributes = [INTERACTION.toServiceId]
  }
  {
    scope = API
    callerAttributes = [INTERACTION.fromApiId]
    calleeAttributes = [INTERACTION.toApiId]
  }
  {
    scope = BACKEND
    callerAttributes = []
    calleeAttributes = [INTERACTION.toBackendId]
  }
]

timestamp.config = [
  {
    scope = ACTOR
    timestamp = lastActivity
  },
  {
    scope = DOMAIN_EVENT
    timestamp = timestamp
  }
]

entity.idcolumn.config = [
  {
    scope = DOMAIN
    key = id
  },
  {
    scope = API
    key = id
  },
  {
    scope = SERVICE
    key = id
  },
  {
    scope = API_TRACE
    key = apiTraceId
  },
  {
    scope = BACKEND
    key = id
  },
  {
    scope = ACTOR
    key = id
  }
]

scopeFiltersConfig = [
  {
    scope = API_TRACE
    filters = [
      {
        scope = API_TRACE
        key = apiBoundaryType
        op = EQ
        value = ENTRY
      },
      {
        scope = API_TRACE
        key = apiId
        op = NEQ
        value = "null"
      }
    ]
  }
]

domainobject.config = [
  {
    scope = DOMAIN
    key = id
    primaryKey = true
    mapping = [
      {
        scope = DOMAIN
        key = id
      }
    ]
  },
  {
    scope = API
    key = id
    primaryKey = true
    mapping = [
      {
        scope = API
        key = id
      }
    ]
  },
  {
    scope = API_TRACE
    key = apiTraceId
    primaryKey = true
    mapping = [
      {
        scope = API_TRACE
        key = apiTraceId
      }
    ]
  },
  {
    scope = SERVICE
    key = id
    primaryKey = true
    mapping = [
      {
        scope = SERVICE
        key = id
      }
    ]
  },
  {
    scope = BACKEND
    key = id
    primaryKey = true
    mapping = [
      {
        scope = BACKEND
        key = id
      }
    ]
  },
  {
    scope = ACTOR
    key = id
    primaryKey = true
    mapping = [
      {
        scope = ACTOR
        key = id
      }
    ]
  },
]

entity.service.log.config = {
  query.threshold.millis = 1500
}

metrics.reporter {
  prefix = org.hypertrace.gateway.service.GatewayService
  names = ["prometheus"]
}
