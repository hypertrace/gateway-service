apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    release: {{ .Release.Name }}
  {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      {{- toYaml .Values.deploymentSelectorMatchLabels | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.containerAdminPort }}"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        release: {{ .Release.Name }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ include "gatewayservice.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.containerPortName }}
              containerPort: {{ .Values.containerPort }}
            - name: admin-port
              containerPort: {{ .Values.containerAdminPort }}
          env:
            - name: SERVICE_NAME
              value: "gateway-service"
            - name: BOOTSTRAP_CONFIG_URI
              value: "file:///app/resources/configs"
            - name: LOG4J_CONFIGURATION_FILE
              value: "/app/log/log4j2.properties"
            - name: JAVA_OPTS
              value: {{ .Values.javaOpts | quote }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12}}
          {{- end }}
          volumeMounts:
            - name: log4j-config
              mountPath: /app/log
            - name: service-config
              mountPath: /app/resources/configs/gateway-service/application.conf
              subPath: application.conf
          livenessProbe:
            periodSeconds: {{ int .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ int .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ int .Values.livenessProbe.timeoutSeconds }}
            httpGet:
              path: /health
              port: {{ .Values.containerAdminPort }}
            startupProbe:
              periodSeconds: {{ int .Values.startupProbe.periodSeconds }}
              failureThreshold: {{ int .Values.startupProbe.failureThreshold }}
              timeoutSeconds: {{ int .Values.startupProbe.timeoutSeconds }}
              httpGet:
                path: /health
                port: {{ .Values.containerAdminPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: service-config
          configMap:
            name: gateway-service-config
        - name: log4j-config
          configMap:
            name: {{ .Values.logConfig.name }}
    {{- with .Values.nodeLabels }}
      nodeSelector:
      {{- toYaml . | nindent 12}}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8}}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8}}
    {{- end }}
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8}}
    {{- end }}
